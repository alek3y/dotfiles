#!/bin/bash

set -e
IFS=$'\n'

function usage {
	printf 'Usage: %s [OPTION...] [COMMAND]\n\n' "$(basename "$0")"
	printf 'Options:\n'
	printf '  -p, --prefix PREFIX   Change the home to PREFIX\n'
	printf '  -s, --share SRC:DST   Bind SRC to DST within the container\n'
	printf '  -o, --offline         Disable network access\n'
	printf '  -h, --help            Show this help message\n'
	exit ${1:-1}
}

prefix=
shares=()
offline=0
positional=()
delimited=0
while [[ $# -gt 0 ]]; do
	case "$1" in
		-p|--prefix)
			prefix="$2"
			if ! shift 2; then usage 1; fi
			;;
		-s|--share)
			shares+=("$2")
			if ! shift 2; then usage 1; fi
			;;
		-o|--offline)
			offline=1
			shift
			;;
		-h|--help)
			usage 0
			shift
			;;
		--)
			delimited=1
			shift
			;;
		*)
			if [[ $delimited -ne 1 && "$1" == "-"* ]]; then
				usage 1
			else
				positional+=("$1")
			fi
			shift
			;;
	esac
done

temporary=0
if [[ -z "$prefix" ]]; then
	prefix=$(mktemp -d --tmpdir "sandbox.XXXXXXXXXX")
	temporary=1
fi

flags=()
if [[ $offline -eq 1 ]]; then
	flags+=(--unshare-net)
fi

if which flatpak &>/dev/null && [[ -d /var/lib/flatpak ]]; then
	flags+=(--tmpfs /var/lib/flatpak)
fi

if [[ ${#shares[@]} -gt 0 ]]; then
	for share in "${shares[@]}"; do
		IFS=':' read -r src dst <<< "$share"
		src="$(realpath "${src/#~/$HOME}")"
		dst="$(realpath "${dst/#~/$HOME}")"
		flags+=(--bind "$src" "$dst")
	done
fi

if [[ ${#positional[@]} -eq 0 ]]; then
	positional=(bash)
fi

function cleanup {
	[[ $temporary -eq 1 ]] && rm -rf "$prefix"
}

mkdir -p "$prefix"
trap cleanup EXIT

unshare \
	--user --map-current-user --map-auto \
	bwrap \
		--bind / / --proc /proc --dev /dev \
		--dev-bind /dev/dri /dev/dri \
		--dev-bind /dev/kvm /dev/kvm \
		--dev-bind /dev/input /dev/input \
		--tmpfs /tmp --tmpfs /var/tmp --tmpfs "$XDG_RUNTIME_DIR" \
		--bind-try /tmp/.X11-unix /tmp/.X11-unix \
		--bind "$prefix" "$HOME" \
		--bind-try "$XDG_RUNTIME_DIR/pulse/native" "$HOME/.pulse" \
		--ro-bind-try "$XAUTHORITY" "$HOME/.Xauthority" \
		--unshare-pid --die-with-parent --clearenv \
		--setenv HOME "$HOME" \
		--setenv TERM "${TERM:-linux}" \
		--setenv PATH "${PATH:-/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin}" \
		--setenv DISPLAY "$DISPLAY" \
		--setenv LANG "$LANG" \
		--setenv XAUTHORITY "${XAUTHORITY:+$HOME/.Xauthority}" \
		--setenv XDG_RUNTIME_DIR "$XDG_RUNTIME_DIR" \
		--setenv XDG_SESSION_TYPE "$XDG_SESSION_TYPE" \
		--setenv PULSE_SERVER "unix:$HOME/.pulse" \
		--setenv GTK_THEME "Adwaita:dark" \
		--setenv ICON_THEME "Adwaita" \
		--setenv ADW_DEBUG_COLOR_SCHEME "prefer-dark" \
		"${flags[@]}" \
		bash -c "
			trap 'pkill -9 .*' EXIT

			if which dbus-launch &>/dev/null; then
				export \$(dbus-launch)
			fi

			if which flatpak &>/dev/null; then
				flatpak remote-add --user --if-not-exists flathub \
					https://flathub.org/repo/flathub.flatpakrepo >/dev/null
				pushd ~/.local/share >/dev/null
				mv flatpak flatpak.bak
				ln -s /var/lib/flatpak flatpak
				flatpak repair --user >/dev/null
				rm flatpak
				mv flatpak.bak flatpak
				popd >/dev/null
			fi

			exec $(printf '%q ' "${positional[@]}")
		"
